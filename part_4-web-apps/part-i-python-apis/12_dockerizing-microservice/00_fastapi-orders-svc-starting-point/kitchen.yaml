openapi: 3.0.3

info:
  title: Kitchen API
  description: >
    API that allows to manage the production of orders in the kitchen for the
    CoffeeMesh application.
  version: 0.1.0

servers:
  - url: http://localhost:5000
    description: local development server
  - url: https://coffeemesh.com
    description: Main production server
  - url: https://coffeemesh-staging.com
    description: staging server for testing purposes only

paths:
  /kitchen/schedules:
    get:
      operationId: getScheduledOrders
      summary:
        Retrieves a list of orders that has been scheduled for production.
      tags:
        - kitchen
      parameters:
        - name: progress
          in: query
          description: >-
            Filter results according to whether the order is in progress or not.
            In progress means it's being worked on in the kitchen.
          required: false
          schema:
            type: boolean
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: since
          in: query
          required: false
          schema:
            type: string
            format: "date-time"
      responses:
        "200":
          description: A list of scheduled orders.
          content:
            application/json:
              schema:
                additionalProperties: false
                type: object
                properties:
                  schedules:
                    type: array
                    items:
                      $ref: "#/components/schemas/GetScheduledOrderSchema"

    post:
      operationId: createScheduledOrder
      summary:
        Schedules an order for production in the kitchen.
      tags:
        - kitchen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleOrderSchema"
      responses:
        "201":
          description: A JSON representation of the scheduled order.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetScheduledOrderSchema"

  /kitchen/schedules/{schedule_id}:
    parameters:
      - in: path
        name: schedule_id
        required: true
        schema:
          type: string
          format: uuid

    get:
      operationId: getScheduledOrder
      summary: Returns the status and details of a specific scheduled order.
      tags:
        - kitchen
      responses:
        "200":
          description: A JSON representation of a scheduled orders.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleOrderSchema"
        "404":
          $ref: "#/components/responses/NotFound"

    put:
      operationId: updateScheduledOrder
      summary: Replaces an existing schedule.
      tags:
        - kitchen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleOrderSchema"
      responses:
        "200":
          description: A JSON representation of a scheduled order.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetScheduledOrderSchema"
        "404":
          $ref: "#/components/responses/NotFound"

    delete:
      operationId: deleteSchedule
      summary: Removes an existing scheduled order.
      tags:
        - kitchen
      responses:
        "204":
          description: The resource was deleted successfully.

  /kitchen/schedules/{schedule_id}/status:
    parameters:
      - in: path
        name: schedule_id
        required: true
        schema:
          type: string
          format: uuid

    get:
      operationId: getScheduledOrderStatus
      summary: Returns the status of a specific scheduled order.
      tags:
        - kitchen
      responses:
        "200":
          description: A JSON representation of a scheduled order status.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleStatusSchema"
        "404":
          $ref: "#/components/responses/NotFound"


  /kitchen/schedules/{schedule_id}/cancel:
    parameters:
      - in: path
        name: schedule_id
        required: true
        schema:
          type: string
          format: uuid

    post:
      operationId: cancelSchedule
      summary: Cancels a specific scheduled order.
      tags:
        - kitchen
      responses:
        "200":
          description: A JSON representation of a scheduled order.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleOrderSchema"
        "404":
          $ref: "#/components/responses/NotFound"


components:
  responses:
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Error:
      type: object
      properties:
        detail:
          oneOf:
            - type: string
            - type: array
      required:
        - detail
      additionalProperties: false

    OrderItemSchema:
      additionalProperties: false
      type: object
      required:
        - product
        - quantity
        - size
      properties:
        product:
          type: string
        size:
          type: string
          enum:
            - small
            - medium
            - big
        quantity:
          type: integer
          minimum: 1

    ScheduleOrderSchema:
      additionalProperties: false
      type: object
      required:
        - order
      properties:
        order:
          type: array
          items:
            $ref: "#/components/schemas/OrderItemSchema"

    GetScheduledOrderSchema:
      additionalProperties: false
      type: object
      required:
        - id
        - order
        - scheduled
        - status
      properties:
        id:
          type: string
          format: uuid
        scheduled:
          type: string
          format: "date-time"
        status:
          type: string
          enum:
            - pending
            - progress
            - cancelled
            - finished
        order:
          type: array
          items:
            $ref: "#/components/schemas/OrderItemSchema"

    ScheduleStatusSchema:
      additionalProperties: false
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - pending
            - progress
            - cancelled
            - finished
